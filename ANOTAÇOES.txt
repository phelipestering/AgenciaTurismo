LOG DE ERROS:

*************************************************************************************************************************************************************************************************************
 Illuminate\Database\QueryException

  SQLSTATE[HY000] [2002] Connection refused (SQL: select * from information_schema.tables where table_schema = agenciaturismo and table_name = migrations and table_type = 'BASE TABLE')

  at vendor/laravel/framework/src/Illuminate/Database/Connection.php:703
    699▕         // If an exception occurs when attempting to run a query, we'll format the error
    700▕         // message to include the bindings with SQL, which will make this exception a
    701▕         // lot more helpful to the developer instead of just the database's errors.
    702▕         catch (Exception $e) {
  ➜ 703▕             throw new QueryException(
    704▕                 $query, $this->prepareBindings($bindings), $e
    705▕             );
    706▕         }
    707▕     }

      +36 vendor frames
  37  artisan:37
      Illuminate\Foundation\Console\Kernel::handle()
*************************************************************************************************************************************************************************************************************
motivo: a porta do .env deve ser a mesma do container no caso  3306, estava com a porta localhost 3308.

Solução: incluir a porta do container 3306

 mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3308}:3306'
*************************************************************************************************************************************************************************************************************

BadMethodCallException

  Method Illuminate\Database\Schema\Blueprint::strings does not exist. -> aqui esta o erro, a palavra strings nao existe, o correto é string !!!

  at vendor/laravel/framework/src/Illuminate/Macroable/Traits/Macroable.php:113
    109▕      */
    110▕     public function __call($method, $parameters)
    111▕     {
    112▕         if (! static::hasMacro($method)) {
  ➜ 113▕             throw new BadMethodCallException(sprintf(
    114▕                 'Method %s::%s does not exist.', static::class, $method
    115▕             ));
    116▕         }
    117▕

  • Bad Method Call: Did you mean Illuminate\Database\Schema\Blueprint::string() ?

  1   database/migrations/2022_01_02_003947_create_brands_table.php:18
      Illuminate\Database\Schema\Blueprint::__call()

      +4 vendor frames
  6   database/migrations/2022_01_02_003947_create_brands_table.php:20
      Illuminate\Support\Facades\Facade::__callStatic()

*************************************************************************************************************************************************************************************************************
MOTIVO: O TIPO ESTAVA ESCRITO COM O NOME ERRADO "STRINGS" O CORRETO É STRING

Solução: ALTERAR O NOME, POR UM NOME CORRETO
*************************************************************************************************************************************************************************************************************
 Illuminate\Database\QueryException

  SQLSTATE[HY000]: General error: 3780 Referencing column 'brand_id' and referenced column 'id' in foreign key constraint 'planes_brand_id_foreign' are incompatible. (SQL: alter table `planes` add constraint `planes_brand_id_foreign` foreign key (`brand_id`) references `brands` (`id`) on delete cascade)

  at vendor/laravel/framework/src/Illuminate/Database/Connection.php:703
    699▕         // If an exception occurs when attempting to run a query, we'll format the error
    700▕         // message to include the bindings with SQL, which will make this exception a
    701▕         // lot more helpful to the developer instead of just the database's errors.
    702▕         catch (Exception $e) {
  ➜ 703▕             throw new QueryException(
    704▕                 $query, $this->prepareBindings($bindings), $e
    705▕             );
    706▕         }
    707▕     }

      +9 vendor frames
  10  database/migrations/2022_01_02_010605_create_planes_table.php:23
      Illuminate\Support\Facades\Facade::__callStatic()

      +21 vendor frames
  32  artisan:37
      Illuminate\Foundation\Console\Kernel::handle()

*************************************************************************************************************************************************************************************************************
MOTIVO: o campo nao estava com os mesmos atributos, increments, somente com ID.

Solução: renomear os campos com o increments nas duas tabelas para que tenham os mesmos atributos e entao apaga as tabelas e executa a migration de novo.

php artisan migrate:fresh

php artisan migrate:fresh --seed

*************************************************************************************************************************************************************************************************************

 Illuminate\Database\QueryException

  SQLSTATE[42S21]: Column already exists: 1060 Duplicate column name 'name' (SQL: create table `airports` (`id` int unsigned not null auto_increment primary key, `city_id` int unsigned not null, `name` varchar(100) not null, `latitude` varchar(15) null, `longitude` varchar(15) null, `address` varchar(100) null, `number` varchar(100) null, `name` varchar(100) null, `zip_code` varchar(11) null, `complement` varchar(190) null, `created_at` timestamp null, `updated_at` timestamp null) default character set utf8mb4 collate 'utf8mb4_unicode_ci')

  at vendor/laravel/framework/src/Illuminate/Database/Connection.php:703
    699▕         // If an exception occurs when attempting to run a query, we'll format the error
    700▕         // message to include the bindings with SQL, which will make this exception a
    701▕         // lot more helpful to the developer instead of just the database's errors.
    702▕         catch (Exception $e) {
  ➜ 703▕             throw new QueryException(
    704▕                 $query, $this->prepareBindings($bindings), $e
    705▕             );
    706▕         }
    707▕     }

      +9 vendor frames
  10  database/migrations/2022_01_02_192842_create_airports_table.php:32
      Illuminate\Support\Facades\Facade::__callStatic()

      +21 vendor frames
  32  artisan:37
      Illuminate\Foundation\Console\Kernel::handle()

*************************************************************************************************************************************************************************************************************
MOTIVO: o campo name ja existia, entao ele nao criou.

Solução: excluir a linha duplicada e dar um roll back na migration

php artisan migrate:rollback

*************************************************************************************************************************************************************************************************************
 Illuminate\Database\QueryException

  SQLSTATE[HY000]: General error: 1824 Failed to open the referenced table 'flight' (SQL: alter table `reserves` add constraint `reserves_flight_id_foreign` foreign key (`flight_id`) references `flight` (`id`) on delete cascade)

  at vendor/laravel/framework/src/Illuminate/Database/Connection.php:703
    699▕         // If an exception occurs when attempting to run a query, we'll format the error
    700▕         // message to include the bindings with SQL, which will make this exception a
    701▕         // lot more helpful to the developer instead of just the database's errors.
    702▕         catch (Exception $e) {
  ➜ 703▕             throw new QueryException(
    704▕                 $query, $this->prepareBindings($bindings), $e
    705▕             );
    706▕         }
    707▕     }

      +9 vendor frames
  10  database/migrations/2022_01_02_200358_create_reserves_table.php:42
      Illuminate\Support\Facades\Facade::__callStatic()

      +21 vendor frames
  32  artisan:37
      Illuminate\Foundation\Console\Kernel::handle()
sail@0646a4e1a71f:/var/www/html$

*************************************************************************************************************************************************************************************************************
MOTIVO: nome incorreto da tabela de referencia, o nome nao é flight é flights, necessario verificar o nome dentro da tabela da migrations.

dica: o nome das tabelas são geralmente no plural

Solução: corrigir o nome da tabela referenciada para flights

php artisan migrate:rollback


php artisan migrate:fresh --seed


*************************************************************************************************************************************************************************************************************

phelipesteringlima@Phelipes-MacBook-Air agenciaTurismo % php artisan migrate

   Illuminate\Database\QueryException

  SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo failed: nodename nor servname provided, or not known (SQL: select * from information_schema.tables where table_schema = agenciaturismo and table_name = migrations and table_type = 'BASE TABLE')

  at vendor/laravel/framework/src/Illuminate/Database/Connection.php:703
    699▕         // If an exception occurs when attempting to run a query, we'll format the error
    700▕         // message to include the bindings with SQL, which will make this exception a
    701▕         // lot more helpful to the developer instead of just the database's errors.
    702▕         catch (Exception $e) {
  ➜ 703▕             throw new QueryException(
    704▕                 $query, $this->prepareBindings($bindings), $e
    705▕             );
    706▕         }
    707▕     }

      +33 vendor frames
  34  artisan:37
      Illuminate\Foundation\Console\Kernel::handle(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))

*************************************************************************************************************************************************************************************************************
MOTIVO: comando executado FORA DO CONTAINER e por isso ele nao achou o caminho para inserir o registro no banco de dados

Solução: entrar no container e depois executar a migrate

sail shell


php artisan migrate


*************************************************************************************************************************************************************************************************************

Illuminate\Database\QueryException
SQLSTATE[HY000]: General error: 1364 Field 'image' doesn't have a default value (SQL: insert into `users` (
    `name`, `email`, `password`, `updated_at`, `created_at`) values (PHELIPE STERING, phelipe.stering@hotmail.com,
    $2y$10$wPbyksYI2o9kJluAYtYBDOsQGdBSPqaWVsHoN5yFSWVuiw0L.FwFW, 2022-01-06 17:41:16, 2022-01-06 17:41:16))

http://agenciaturismo.test/register

*************************************************************************************************************************************************************************************************************
MOTIVO: a coluna image nao tem um valor default, necessario incluir o atributo nullable


Solução: incluir o atributo nullable para ter nao ser necessario upload de imagem

instalar o doctrine ball

sintaxe do codigo

php artisan make:migration alter_table_<nomeTabela>_change_<nomeCOLUNA> --table=<nomeTabela>

php artisan make:migration alter_table_users_change_image --table=users

public function up()
    {
        Schema::table('users', function (Blueprint $table) {
            //

            $table->string('image',200)->nullable()->change();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::table('users', function (Blueprint $table) {
            //
            $table->dropColumn('image');

        });
    }

revertendo...

$table->string('image',200)->nullable(false)->change();

*************************************************************************************************************************************************************************************************************


LAYOUTS DO CURSO - baixando os LAYOUTS

Fazer imagem docker  / nginx para rodar os sites.

foram upados nos mesmos containers, os 1 container para as duas aplicacoes.

CONFIGURACOES INICIAIS

1- DEFININDO O Timezone


alias sail='[ -f sail ] && bash sail || bash vendor/bin/sail'


config/app.php

2- CONFIGURANDO O VIRTUAL HOST APLICACAO LARAVEL

ALTERADO EM APP_URL=http://agenciaTurismo.test no .ENV em sequencia adicionado o endereco no host do sistema

127.0.0.1 	agenciaturismo.dev

acessando pela novegador por esse endereco


EXECUTANDO AS MIGRATIONS DENTRO DO Container

relacionamentos nas migrations:

 public function up()
    {
        Schema::create('planes', function (Blueprint $table) {
            $table->id();
            $table->integer('brand_id')->unsigned(); definindo a chave estrangeira
            $table->foreign('brand_id')->references('id')->on('brands')->onDelete('cascade');

            informando que a chave estrangeira brand_id, referencia a coluna id, da tabela brands, e que quando a chave estrangeira
            deletar, todos o registros serao deletados, evitando registros orfaos.


            $table->integer('qty_passengers');
            $table->enum('class',['economic','luxury']);

            definindo que a class possui 02 atributos, voce pode aplicar para inspetores e suas disciplinas
            $table->timestamps();
        });
    }


mais comandos de migration...

Command "migrate:" is ambiguous.

  Did you mean one of these?
      migrate:fresh    Drop all tables and re-run all migrations
      migrate:install  Create the migration repository
      migrate:refresh  Reset and re-run all migrations
      migrate:reset    Rollback all database migrations
      migrate:rollback Rollback the last database migration
      migrate:status   Show the status of each migration.

Observando a caracteristica, cria-se a model no SINGULAR COM A LETRA MAIUSCULA e entao o proprio laravel cria a migration no PLURAL !!!!

sail@0646a4e1a71f:/var/www/html$ php artisan make:model State -m
Model created successfully.
Created Migration: 2022_01_02_192731_create_states_table
sail@0646a4e1a71f:/var/www/html$ php artisan make:model City -m
Model created successfully.
Created Migration: 2022_01_02_192808_create_cities_table
sail@0646a4e1a71f:/var/www/html$ php artisan make:model Airport -m
Model created successfully.
Created Migration: 2022_01_02_192842_create_airports_table

analisando a migration de Cidade...

Schema::create('cities', function (Blueprint $table) {
            $table->increments('id'); -> criando o id da cidade
            $table->integer('state_id')->unsigned(); -> crio a coluna state_id com usigned para ser usada como chave estrangeira, a coluna de chave estrangeira
            deve ser categorizada como unsigned
            $table->foreign('state_id') -> gero uma chave chave estrangeira
                                ->references('id') -> referenciando o id
                                ->('states') -> da tabela states
                                ->onDelete('cascade'); -> e na delecao deleta tudo evitando registros orfaos
            $table->string('name',100);
            $table->string('zip_code',11)->nullable(); -> coluna zip code, com 11 caracteres com preenchimento nao obrigatorio (nullable)
            $table->timestamps();
        });

para saber mais sobre o unsigned...

O unsigned significa sem sinal. Cada tipo de campo nos banco de dados tem um tipo de valor e um limite de armazenamento.

Para números inteiros com sinal tem-se um limite que vai de um certo número negativo até um certo número positivo, já sem sinal, a faixa começa de 0 e vai até um número maior do que a faixa com sinal, pois começa de 0.

E quando declaramos uma chave estrangeira, seja ela qual for, deve ser do mesmo tipo da chave primária, senão acontecerá um erro.

No caso do Laravel, quando declaramos na migração increments, se for MySQL, será criado uma chave primária inteira sem sinal, por isso as chaves estrangeiras devem ser unsigned.

Metodo de organização, foram criados as colunas e depois as chaves estrangeiras

Schema::create('flights', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('plane_id')->unsigned();
            $table->integer('airport_origin_id')->unsigned();
            $table->integer('airport_destination_id')->unsigned();
            $table->date('date');
            $table->time('time_duration');
            $table->time('hour_output');
            $table->time('arrival_time');
            $table->double('old_price', 10, 2);
            $table->double('price', 10, 2);
            $table->integer('total_plots');
            $table->boolean('is_promotion')->default(false);
            $table->string('image', 200)->nullable();
            $table->integer('qty_stops')->default(0);
            $table->text('description')->nullable();

            $table->foreign('plane_id')
                    ->references('id')
                    ->on('planes')
                    ->onDelete('cascade');

            $table->foreign('airport_origin_id')
                    ->references('id')
                    ->on('airports')
                    ->onDelete('cascade');

            $table->foreign('airport_destination_id')
                    ->references('id')
                    ->on('airports')
                    ->onDelete('cascade');


            $table->timestamps();
        });

IMPORTANDO ESTADOS E CIDADES

1- va até o mysql  workbench

2 - selecione o banco de dados

3- abra uma nova query e arraste o arquivo

4- selecione tudo com CTRL + A e execute

5- verifique se foi criado uma tabela com o nome do arquivo que foi anexado.


nesse exemplo, perceba que foram criadas as tabelas states e cities.

outro metodo...

1- va ate a aba admnistration

2- selecione Data Import/ restore

3- selecione Import from Self-Contained Files

4- selecione o banco de dados em Default Target schema

5- clique em start important

6- verique os dados importados

INTEGRANDO LAYOUT DASHBOARD AO LARAVEL

construindo o painel

1- criados as pastas dentro de resources/views/panels/layouts

2- copiado o conteudo do arquivo painel.php da pasta de layout-dashboard-free

LAYOUT painel

1- Titulo dinamico

<title>{{$title or 'Panel EspecializaTi'}}</title>

caso houver uma variavel title ele imprime, se nao houver imprime a o textContent

2- Conteudo dinamico da pagina

usando o @yield

@yield('content')

o yield vai adicionar o conteudo dinamicamente

3- inserindo os arquivo CSS, js e etc - arquivos de view em geral

criando uma pasta public/assets/panel


4- direcionando os arquivos da pagina.

ROTAS LARAVEL

vamos usar o modelo abaixo:

Route::get('/panel', [PanelController::class, 'index'])->name('panel.index');

CONFIGURANDO O EMAIL

1- ENTRAR NO MAILTRAP.IO

2- CONFIGURANDO O ENVIO EM CONFIG LARAVEL

.ENV

MAIL_MAILER=smtp
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=af4d0885cf885b
MAIL_PASSWORD=27bf395b33c060
MAIL_ENCRYPTION=tls


config/mail.php

configuracao dos remetentes padrao

'from' => [
        'address' => env('MAIL_FROM_ADDRESS', 'testelaravel@intertek.com'),
        'name' => env('MAIL_FROM_NAME', 'coordenador'),
    ],











